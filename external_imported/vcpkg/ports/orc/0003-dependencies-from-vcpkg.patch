diff --git a/c++/src/CMakeLists.txt b/c++/src/CMakeLists.txt
index d4cd035..0701a7d 100644
--- a/c++/src/CMakeLists.txt
+++ b/c++/src/CMakeLists.txt
@@ -239,12 +239,13 @@ endif(BUILD_LIBHDFSPP)
 add_library (orc STATIC ${SOURCE_FILES})
 
 target_link_libraries (orc
-  orc::protobuf
-  orc::zlib
-  orc::snappy
-  orc::lz4
-  orc::zstd
-  ${LIBHDFSPP_LIBRARIES}
+  PRIVATE
+    protobuf::libprotobuf
+    ZLIB::ZLIB
+    Snappy::snappy
+    lz4::lz4
+    $<IF:$<TARGET_EXISTS:zstd::libzstd_shared>,zstd::libzstd_shared,zstd::libzstd_static>
+    ${LIBHDFSPP_LIBRARIES}
   )
 
 install(TARGETS orc DESTINATION lib)
diff --git a/cmake_modules/ThirdpartyToolchain.cmake b/cmake_modules/ThirdpartyToolchain.cmake
index 6919847..ad52cf2 100644
--- a/cmake_modules/ThirdpartyToolchain.cmake
+++ b/cmake_modules/ThirdpartyToolchain.cmake
@@ -66,8 +66,8 @@ endif ()
 # ----------------------------------------------------------------------
 # Snappy
 
-if (NOT "${SNAPPY_HOME}" STREQUAL "")
-  find_package (Snappy REQUIRED)
+if (1)
+  find_package (Snappy CONFIG REQUIRED)
   set(SNAPPY_VENDORED FALSE)
 else ()
   set(SNAPPY_HOME "${THIRDPARTY_DIR}/snappy_ep-install")
@@ -90,15 +90,6 @@ else ()
   set(SNAPPY_VENDORED TRUE)
 endif ()
 
-add_library (orc_snappy INTERFACE)
-add_library (orc::snappy ALIAS orc_snappy)
-if (ORC_PREFER_STATIC_SNAPPY AND ${SNAPPY_STATIC_LIB})
-  target_link_libraries(orc_snappy INTERFACE ${SNAPPY_STATIC_LIB})
-else ()
-  target_link_libraries(orc_snappy INTERFACE ${SNAPPY_LIBRARY})
-endif ()
-target_include_directories (orc_snappy SYSTEM INTERFACE ${SNAPPY_INCLUDE_DIR})
-
 if (SNAPPY_VENDORED)
   add_dependencies (orc_snappy snappy_ep)
   if (INSTALL_VENDORED_LIBS)
@@ -110,7 +101,7 @@ endif ()
 # ----------------------------------------------------------------------
 # ZLIB
 
-if (NOT "${ZLIB_HOME}" STREQUAL "")
+if (1)
   find_package (ZLIB REQUIRED)
   set(ZLIB_VENDORED FALSE)
 else ()
@@ -142,15 +133,6 @@ else ()
   set(ZLIB_VENDORED TRUE)
 endif ()
 
-add_library (orc_zlib INTERFACE)
-add_library (orc::zlib ALIAS orc_zlib)
-if (ORC_PREFER_STATIC_ZLIB AND ${ZLIB_STATIC_LIB})
-  target_link_libraries (orc_zlib INTERFACE ${ZLIB_STATIC_LIB})
-else ()
-  target_link_libraries (orc_zlib INTERFACE ${ZLIB_LIBRARY})
-endif ()
-target_include_directories (orc_zlib SYSTEM INTERFACE ${ZLIB_INCLUDE_DIR})
-
 if (ZLIB_VENDORED)
   add_dependencies (orc_zlib zlib_ep)
   if (INSTALL_VENDORED_LIBS)
@@ -162,8 +144,8 @@ endif ()
 # ----------------------------------------------------------------------
 # Zstd
 
-if (NOT "${ZSTD_HOME}" STREQUAL "")
-  find_package (ZSTD REQUIRED)
+if (1)
+  find_package (ZSTD CONFIG REQUIRED)
   set(ZSTD_VENDORED FALSE)
 else ()
   set(ZSTD_HOME "${THIRDPARTY_DIR}/zstd_ep-install")
@@ -201,15 +183,6 @@ else ()
   set(ZSTD_VENDORED TRUE)
 endif ()
 
-add_library (orc_zstd INTERFACE)
-add_library (orc::zstd ALIAS orc_zstd)
-if (ORC_PREFER_STATIC_ZSTD AND ${ZSTD_STATIC_LIB})
-  target_link_libraries (orc_zstd INTERFACE ${ZSTD_STATIC_LIB})
-else ()
-  target_link_libraries (orc_zstd INTERFACE ${ZSTD_LIBRARY})
-endif ()
-target_include_directories (orc_zstd SYSTEM INTERFACE ${ZSTD_INCLUDE_DIR})
-
 if (ZSTD_VENDORED)
   add_dependencies (orc_zstd zstd_ep)
   if (INSTALL_VENDORED_LIBS)
@@ -221,8 +194,8 @@ endif ()
 # ----------------------------------------------------------------------
 # LZ4
 
-if (NOT "${LZ4_HOME}" STREQUAL "")
-  find_package (LZ4 REQUIRED)
+if (1)
+  find_package (LZ4 CONFIG REQUIRED)
   set(LZ4_VENDORED FALSE)
 else ()
   set(LZ4_PREFIX "${THIRDPARTY_DIR}/lz4_ep-install")
@@ -253,15 +226,6 @@ else ()
   set(LZ4_VENDORED TRUE)
 endif ()
 
-add_library (orc_lz4 INTERFACE)
-add_library (orc::lz4 ALIAS orc_lz4)
-if (ORC_PREFER_STATIC_LZ4 AND ${LZ4_STATIC_LIB})
-  target_link_libraries (orc_lz4 INTERFACE ${LZ4_STATIC_LIB})
-else ()
-  target_link_libraries (orc_lz4 INTERFACE ${LZ4_LIBRARY})
-endif ()
-target_include_directories (orc_lz4 SYSTEM INTERFACE ${LZ4_INCLUDE_DIR})
-
 if (LZ4_VENDORED)
   add_dependencies (orc_lz4 lz4_ep)
   if (INSTALL_VENDORED_LIBS)
@@ -273,7 +237,7 @@ endif ()
 # ----------------------------------------------------------------------
 # IANA - Time Zone Database
 
-if (WIN32)
+if (WIN32 AND TEST_VALGRIND_MEMCHECK)
   SET(CURRENT_TZDATA_FILE "")
   SET(CURRENT_TZDATA_SHA512 "")
   File(DOWNLOAD "https://ftp.osuosl.org/pub/cygwin/noarch/release/tzdata/sha512.sum" ${CMAKE_CURRENT_BINARY_DIR}/sha512.sum)
@@ -372,8 +336,8 @@ endif ()
 # ----------------------------------------------------------------------
 # Protobuf
 
-if (NOT "${PROTOBUF_HOME}" STREQUAL "")
-  find_package (Protobuf REQUIRED)
+if (1)
+  find_package (Protobuf CONFIG REQUIRED)
   set(PROTOBUF_VENDORED FALSE)
 else ()
   set(PROTOBUF_PREFIX "${THIRDPARTY_DIR}/protobuf_ep-install")
@@ -421,19 +385,7 @@ add_library (orc::protobuf ALIAS orc_protobuf)
 add_library (orc_protoc INTERFACE)
 add_library (orc::protoc ALIAS orc_protoc)
 
-if (ORC_PREFER_STATIC_PROTOBUF AND ${PROTOBUF_STATIC_LIB})
-  target_link_libraries (orc_protobuf INTERFACE ${PROTOBUF_STATIC_LIB})
-else ()
-  target_link_libraries (orc_protobuf INTERFACE ${PROTOBUF_LIBRARY})
-endif()
-target_include_directories (orc_protobuf SYSTEM INTERFACE ${PROTOBUF_INCLUDE_DIR})
-
-if (ORC_PREFER_STATIC_PROTOBUF AND ${PROTOC_STATIC_LIB})
-  target_link_libraries (orc_protoc INTERFACE ${PROTOC_STATIC_LIB})
-else ()
-  target_link_libraries (orc_protoc INTERFACE ${PROTOC_LIBRARY})
-endif()
-target_include_directories (orc_protoc SYSTEM INTERFACE ${PROTOBUF_INCLUDE_DIR})
+include_directories (SYSTEM ${PROTOBUF_INCLUDE_DIR})
 
 if (PROTOBUF_VENDORED)
   add_dependencies (orc_protoc protobuf_ep)
diff --git a/tools/src/CMakeLists.txt b/tools/src/CMakeLists.txt
index d55581b..701fd7c 100644
--- a/tools/src/CMakeLists.txt
+++ b/tools/src/CMakeLists.txt
@@ -95,11 +95,7 @@ target_link_libraries (csv-import
   )
 
 install(TARGETS
-   orc-contents
-   orc-metadata
-   orc-statistics
    orc-scan
    orc-memory
-   timezone-dump
    csv-import
-   DESTINATION bin)
+   DESTINATION tools/orc)
