diff --git a/src/rtkCudaLagCorrectionImageFilter.cu b/src/rtkCudaLagCorrectionImageFilter.cu
index 8719ee48..5f8abb23 100644
--- a/src/rtkCudaLagCorrectionImageFilter.cu
+++ b/src/rtkCudaLagCorrectionImageFilter.cu
@@ -114,7 +114,7 @@ CUDA_lag_correction(int              proj_idx_in[3],      // overlapping input r
   cudaMalloc((void **)&d_state, state_size);
   if (cudaMemcpy(d_state, h_state, state_size, cudaMemcpyHostToDevice) != cudaSuccess)
   {
-    std::cout << "Error allocating state" << std::endl;
+    itkGenericExceptionMacro("Error allocating state");
   }
 
   if (coefficients[8] <= 0.0)
diff --git a/src/rtkCudaPolynomialGainCorrectionImageFilter.cu b/src/rtkCudaPolynomialGainCorrectionImageFilter.cu
index fb7939dd..d0aacc23 100644
--- a/src/rtkCudaPolynomialGainCorrectionImageFilter.cu
+++ b/src/rtkCudaPolynomialGainCorrectionImageFilter.cu
@@ -111,7 +111,7 @@ CUDA_gain_correction(int              proj_idx_in[3],      // overlapping input
   cudaMalloc((void **)&d_powerlut, lut_size);
   if (cudaMemcpy(d_powerlut, h_powerlut, lut_size, cudaMemcpyHostToDevice) != cudaSuccess)
   {
-    std::cout << "Error allocating state" << std::endl;
+    itkGenericExceptionMacro("Error allocating state");
   }
 
   cudaMemcpyToSymbol(cst_coef, coefficients, 2 * sizeof(float));
