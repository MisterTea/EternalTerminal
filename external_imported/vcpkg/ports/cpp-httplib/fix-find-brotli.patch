diff --git a/CMakeLists.txt b/CMakeLists.txt
index 709390a..3fd83aa 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -127,9 +127,9 @@ endif()
 # Adds our cmake folder to the search path for find_package
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 if(HTTPLIB_REQUIRE_BROTLI)
-	find_package(Brotli COMPONENTS encoder decoder common REQUIRED)
+	find_package(unofficial-brotli CONFIG REQUIRED)
 elseif(HTTPLIB_USE_BROTLI_IF_AVAILABLE)
-	find_package(Brotli COMPONENTS encoder decoder common QUIET)
+	find_package(unofficial-brotli CONFIG QUIET)
 endif()
 # Just setting this variable here for people building in-tree
 if(Brotli_FOUND)
@@ -206,9 +206,9 @@ target_link_libraries(${PROJECT_NAME} ${_INTERFACE_OR_PUBLIC}
 		$<$<PLATFORM_ID:Windows>:crypt32>
 		$<$<PLATFORM_ID:Windows>:cryptui>
 		# Can't put multiple targets in a single generator expression or it bugs out.
-		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:Brotli::common>
-		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:Brotli::encoder>
-		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:Brotli::decoder>
+		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:unofficial::brotli::brotlicommon>
+		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:unofficial::brotli::brotlienc>
+		$<$<BOOL:${HTTPLIB_IS_USING_BROTLI}>:unofficial::brotli::brotlidec>
 		$<$<BOOL:${HTTPLIB_IS_USING_ZLIB}>:ZLIB::ZLIB>
 		$<$<BOOL:${HTTPLIB_IS_USING_OPENSSL}>:OpenSSL::SSL>
 		$<$<BOOL:${HTTPLIB_IS_USING_OPENSSL}>:OpenSSL::Crypto>
@@ -265,9 +265,6 @@ install(FILES "${_httplib_build_includedir}/httplib.h" TYPE INCLUDE)
 install(FILES
 		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
 		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
-		# Install it so it can be used later by the httplibConfig.cmake file.
-		# Put it in the same dir as our config file instead of a global path so we don't potentially stomp on other packages.
-		"${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindBrotli.cmake"
 	DESTINATION ${_TARGET_INSTALL_CMAKEDIR}
 )
 
