version: 2
jobs:
  connect_to_initial_version:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake ninja-build libutempter-dev build-essential openssh-server protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libtool libtool-bin autoconf
      - checkout
      - run:
          name: Set up ssh & known_hosts
          command: sudo sed -i -e 's/#ListenAddress/ListenAddress/' /etc/ssh/sshd_config; sudo sed -i -e 's/AddressFamily inet/AddressFamily any/' /etc/ssh/sshd_config; sudo /etc/init.d/ssh restart; rm -f ~/.ssh/id_rsa*; ssh-keygen -q -N "" -f ~/.ssh/id_rsa; sudo rm -f ~/.ssh/authorized_keys; cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys; rm -f ~/.ssh/known_hosts; ssh -o "StrictHostKeyChecking no" localhost ls; ssh -o "StrictHostKeyChecking no" 0:0:0:0:0:0:0:1 ls

      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the root version of the project
          command: mkdir ../root_version; cp -Rf .git * ../root_version/; cd ../root_version; git checkout v6; git submodule update --init --recursive; cd build; cmake ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Build the project
          command: cd build; cmake ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Connect new -> old
          command: sudo ../root_version/build/etserver --daemon; sudo cp ../root_version/build/etterminal /usr/bin/etterminal; sleep 3; build/et -c "ls" localhost --logtostdout --verbose=9
      - run:
          name: Connect new -> old (ipv6)
          command: build/et -c "ls" 0:0:0:0:0:0:0:1 --logtostdout --verbose=9
      - run:
          name: Connect new -> old (ipv6 with port in host)
          command: build/et -c "ls" 0:0:0:0:0:0:0:1:2022 --logtostdout --verbose=9
      - run:
          name: Connect new -> old (ipv6 abbreviated)
          command: build/et -c "ls" ::1 --logtostdout --verbose=9
      - run:
          name: Connect new -> old (ipv6 abbreviated with port arg)
          command: build/et -c "ls" ::1 --port 2022 --logtostdout --verbose=9
      - run:
          name: Kill server
          command: sudo pkill etserver
      - run:
          name: Connect old -> new
          command: export TERM=xterm-256color; sudo build/etserver --daemon; sudo cp build/etterminal /usr/bin/etterminal; sleep 3; ../root_version/build/et -c "ls" localhost --logtostdout --verbose=9
      - run:
          name: Kill server
          command: sudo pkill etserver
      - run:
          name: Debug info/logs if failed
          when: always
          command: ls -la /tmp/et*; sudo awk 'FNR==1 {print "XXXXXX", FILENAME, "XXXXXX"}{print}' /tmp/et*.log

  connect_with_jumphost:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake ninja-build libutempter-dev build-essential openssh-server libtool libtool-bin autoconf
      - checkout
      - run:
          name: Set up ssh & known_hosts
          command: sudo /etc/init.d/ssh start; rm -f ~/.ssh/id_rsa*; ssh-keygen -q -N "" -f ~/.ssh/id_rsa; sudo rm -f ~/.ssh/authorized_keys; cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys; rm -f ~/.ssh/known_hosts; ssh -o "StrictHostKeyChecking no" localhost ls
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project
          command: cd build; cmake -DCMAKE_INSTALL_PREFIX=/usr ../; make -j4; sudo make install
          no_output_timeout: 60m
      - run:
          name: Start Servers
          command: sudo build/etserver --daemon; sudo build/etserver --port 2023 --serverfifo=/tmp/etserver.idpasskey.fifo2 --daemon; sleep 3; build/et -c "ls" --serverfifo=/tmp/etserver.idpasskey.fifo2 --logtostdout --verbose=9 --jumphost localhost --jport 2022 localhost:2023
      - run:
          name: Kill servers
          command: sudo pkill etserver
      - run:
          name: Debug info/logs if failed
          when: always
          command: ls -la /tmp/et*; sudo awk 'FNR==1 {print "XXXXXX", FILENAME, "XXXXXX"}{print}' /tmp/et*.log

workflows:
  version: 2
  build_and_test:
    jobs:
      - connect_with_jumphost
      - connect_to_initial_version:
          filters:
            branches:
              ignore:
                - release
                - deployment
