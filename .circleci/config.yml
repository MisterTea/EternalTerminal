version: 2
jobs:
  connect_to_initial_version:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++ openssh-server
      - checkout
      - run:
          name: Set up ssh & known_hosts
          command: sudo /etc/init.d/ssh start; rm -f ~/.ssh/id_rsa*; ssh-keygen -q -N "" -f ~/.ssh/id_rsa; sudo rm ~/.ssh/authorized_keys; cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys; rm -f ~/.ssh/known_hosts; ssh -o "StrictHostKeyChecking no" localhost ls
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the root version of the project
          command: mkdir ../root_version; cp -Rf .git * ../root_version/; cd ../root_version; git checkout v6; cd build; cmake ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Build the project
          command: cd build; cmake ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Connect new -> old
          command: sudo ../root_version/build/etserver --daemon; sudo cp ../root_version/build/etterminal /usr/bin/etterminal; sleep 1; build/et -c "ls" localhost --logtostdout --verbose=9
      - run:
          name: Kill server
          command: sudo pkill etserver
      - run:
          name: Connect old -> new
          command: export TERM=xterm-256color; sudo build/etserver --daemon; sudo cp build/etterminal /usr/bin/etterminal; sleep 1; ../root_version/build/et -c "ls" localhost --logtostdout --verbose=9
      - run:
          name: Kill server
          command: sudo pkill etserver

  connect_with_jumphost:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++ openssh-server
      - checkout
      - run:
          name: Set up ssh & known_hosts
          command: sudo /etc/init.d/ssh start; rm -f ~/.ssh/id_rsa*; ssh-keygen -q -N "" -f ~/.ssh/id_rsa; sudo rm ~/.ssh/authorized_keys; cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys; rm -f ~/.ssh/known_hosts; ssh -o "StrictHostKeyChecking no" localhost ls
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project
          command: cd build; cmake -DCMAKE_INSTALL_PREFIX=/usr ../; make -j4; sudo make install
          no_output_timeout: 60m
      - run:
          name: Start Servers
          command: sudo build/etserver --daemon; sudo build/etserver --port 2023 --serverfifo=/tmp/etserver.idpasskey.fifo2 --daemon; build/et -c "ls" --serverfifo=/tmp/etserver.idpasskey.fifo2 --logtostdout --verbose=9 --jumphost localhost --jport 2022 localhost:2023
      - run:
          name: Kill servers
          command: sudo pkill etserver

  linux_msan:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++
      - checkout
      - run:
          name: Init submodules
          command: git submodule update --init --recursive
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project with test
          command: cd build; cmake -DSANITIZE_MEMORY=ON ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Run tests
          command: cd build; TSAN_OPTIONS="suppressions=../test/test_tsan.suppression" ./et-test
  linux_asan:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++
      - checkout
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project with test
          command: cd build; cmake -DSANITIZE_ADDRESS=ON ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Run tests
          command: cd build; TSAN_OPTIONS="suppressions=../test/test_tsan.suppression" ./et-test
  linux_tsan:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++
      - checkout
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project with test
          command: cd build; cmake -DSANITIZE_THREAD=ON ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Run tests
          command: cd build; TSAN_OPTIONS="suppressions=../test/test_tsan.suppression" ./et-test
  linux_ubsan:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y update; sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get install -y curl zip unzip tar libssl-dev libcurl4-openssl-dev libunwind-dev git cmake protobuf-compiler libsodium-dev libgflags-dev libprotobuf-dev libutempter-dev g++
      - checkout
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-linux --feature-flags="manifests" install; fi
      - run:
          name: Build the project with test
          command: cd build; cmake -DSANITIZE_UNDEFINED=ON ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Run tests
          command: cd build; TSAN_OPTIONS="suppressions=../test/test_tsan.suppression" ./et-test
  mac_tsan:
    macos:
      xcode: "11.3.1"
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: Install system dependencies
          command: brew remove python@2; brew upgrade python; brew install cmake; brew install openssl protobuf libsodium gflags pkg-config
      - checkout
      - run:
          name: Init submodules
          command: if [ $CIRCLE_BRANCH != "release" ]; then git submodule update --init --recursive; fi
      - run:
          name: vcpkg
          command: if [ $CIRCLE_BRANCH != "release" ]; then external/vcpkg/bootstrap-vcpkg.sh; mkdir build; ./external/vcpkg/vcpkg --x-install-root=$PWD/build/vcpkg_installed --triplet=x64-osx --feature-flags="manifests" install; fi
      - run:
          name: Build the project with test
          command: cd build; cmake -DSANITIZE_THREAD=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib ../; make -j4
          no_output_timeout: 60m
      - run:
          name: Run tests
          command: cd build; TSAN_OPTIONS="suppressions=../test/test_tsan.suppression" ./et-test
workflows:
  version: 2
  build_and_test:
    jobs:
      - linux_asan
      - linux_tsan
      - linux_ubsan
      - mac_tsan
      - connect_with_jumphost
      - connect_to_initial_version:
          filters:
            branches:
              ignore:
                - release
